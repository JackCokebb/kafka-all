[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 1.8.0_291)
[debug]       Load.loadUnit: plugins took 202.765802ms
[debug]       Load.loadUnit: defsScala took 0.365533ms
[debug] [Loading] Scanning directory /Users/jeejunhyun/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/jeejunhyun/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.715604 ms
[debug]           Load.resolveProject(global-plugins) took 50.664385ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/jeejunhyun/.sbt/1.0/plugins, plugins: List(<none>))) took 106.675857ms
[debug] [Loading] Done in /Users/jeejunhyun/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 132.567469ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.28661ms
[debug]     Load.loadUnit(file:/Users/jeejunhyun/.sbt/1.0/plugins/, ...) took 344.320361ms
[debug]   Load.apply: load took 5520.416403ms
[debug]   Load.apply: resolveProjects took 7.956117ms
[debug]   Load.apply: finalTransforms took 57.063747ms
[debug]   Load.apply: config.delegates took 7.968142ms
[debug]   Load.apply: Def.make(settings)... took 424.500239ms
[debug]   Load.apply: structureIndex took 92.323407ms
[debug]   Load.apply: mkStreams took 2.253935ms
[info] loading global plugins from /Users/jeejunhyun/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 12809.581282ms
[debug]           Load.loadUnit: plugins took 99.826251ms
[debug]           Load.loadUnit: defsScala took 0.006087ms
[debug] [Loading] Scanning directory /Users/jeejunhyun/devKaf/scalaws/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/jeejunhyun/devKaf/scalaws/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.645819 ms
[debug]               Load.resolveProject(scalaws-build) took 1.638762ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaws-build, base: /Users/jeejunhyun/devKaf/scalaws/project, plugins: List(<none>))) took 5.095517ms
[debug] [Loading] Done in /Users/jeejunhyun/devKaf/scalaws/project, returning: (scalaws-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.587721ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.016148ms
[debug]         Load.loadUnit(file:/Users/jeejunhyun/devKaf/scalaws/project/, ...) took 108.65767ms
[debug]       Load.apply: load took 111.191045ms
[debug]       Load.apply: resolveProjects took 0.13126ms
[debug]       Load.apply: finalTransforms took 10.935888ms
[debug]       Load.apply: config.delegates took 0.371156ms
[debug]       Load.apply: Def.make(settings)... took 70.745623ms
[debug]       Load.apply: structureIndex took 28.256107ms
[debug]       Load.apply: mkStreams took 0.002537ms
[info] loading project definition from /Users/jeejunhyun/devKaf/scalaws/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 408.070935ms
[debug]     Load.loadUnit: defsScala took 0.002747ms
[debug] [Loading] Scanning directory /Users/jeejunhyun/devKaf/scalaws
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/jeejunhyun/devKaf/scalaws, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.918496 ms
[debug]         Load.resolveProject(scalaws) took 1.510733ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalaws, base: /Users/jeejunhyun/devKaf/scalaws, plugins: List(<none>))) took 3.855899ms
[debug] [Loading] Done in /Users/jeejunhyun/devKaf/scalaws, returning: (scalaws)
[debug]     Load.loadUnit: loadedProjectsRaw took 5.001927ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.010451ms
[debug]   Load.loadUnit(file:/Users/jeejunhyun/devKaf/scalaws/, ...) took 413.679986ms
[debug] Load.apply: load took 415.065912ms
[debug] Load.apply: resolveProjects took 0.14229ms
[debug] Load.apply: finalTransforms took 7.405801ms
[debug] Load.apply: config.delegates took 0.361234ms
[debug] Load.apply: Def.make(settings)... took 51.002047ms
[debug] Load.apply: structureIndex took 17.817795ms
[debug] Load.apply: mkStreams took 0.002615ms
[info] set current project to scalaws (in build file:/Users/jeejunhyun/devKaf/scalaws/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/jeejunhyun/.sbt/1.0/server/87e40291b3c35515e935/sock
[debug] Writing bsp connection file
[info] started sbt server
